From f6d64c06b2d2fafa72721e10722774058b278108 Mon Sep 17 00:00:00 2001
From: Pekka Vuorela <pekka.vuorela@jolla.com>
Date: Fri, 23 Dec 2022 14:59:09 +0200
Subject: [PATCH] [libconnman-qt] Build without module prefix by default.
 JB#59702

The MeeGo.Connman now considered legacy and support only generated
in the .spec file. Allows to migrate code gradually to the new naming.
---
 plugin/plugin.cpp       |  8 ++------
 plugin/plugin.pro       | 19 ++-----------------
 plugin/plugins.qmltypes | 28 ++++++++++++++--------------
 plugin/qmldir           |  2 +-
 rpm/connman-qt5.spec    | 10 ++++++----
 5 files changed, 25 insertions(+), 42 deletions(-)

diff --git a/plugin/plugin.cpp b/plugin/plugin.cpp
index 39d9ecc..8eeda3a 100644
--- a/plugin/plugin.cpp
+++ b/plugin/plugin.cpp
@@ -34,11 +34,7 @@ static QObject *singleton_api_factory(QQmlEngine *, QJSEngine *)
 class ConnmanPlugin: public QQmlExtensionPlugin
 {
     Q_OBJECT
-    #ifdef USE_MODULE_PREFIX
-        Q_PLUGIN_METADATA(IID "MeeGo.Connman")
-    #else
-        Q_PLUGIN_METADATA(IID "Connman")
-    #endif
+    Q_PLUGIN_METADATA(IID "Connman")
 
 public:
     void registerTypes(const char *uri);
@@ -48,7 +44,7 @@ public:
 
 void ConnmanPlugin::registerTypes(const char *uri)
 {
-    // @uri MeeGo.Connman
+    Q_ASSERT(uri == QLatin1String("MeeGo.Connman") || uri == QLatin1String("Connman"));
 
     qmlRegisterType<NetworkService>(uri,0,2,"NetworkService");
     qmlRegisterType<TechnologyModel>(uri,0,2,"TechnologyModel");
diff --git a/plugin/plugin.pro b/plugin/plugin.pro
index 087b1b4..cd91c8e 100644
--- a/plugin/plugin.pro
+++ b/plugin/plugin.pro
@@ -17,18 +17,7 @@ LIBS += -l$$qtLibraryTarget(connman-$$TARGET_SUFFIX)
 QT += qml
 OTHER_FILES += plugin.json plugins.qmltypes qmldirs
 
-
-contains(CONFIG,no-module-prefix) {
-    system("sed -i 's/@@ModulePrefix@@//' qmldir")
-    system("sed -i 's/@@ModulePrefix@@//' plugins.qmltypes")
-    MODULENAME = Connman
-} else {
-    system("sed -i 's/@@ModulePrefix@@/MeeGo\./' qmldir")
-    system("sed -i 's/@@ModulePrefix@@/MeeGo\./' plugins.qmltypes")
-    MODULENAME = MeeGo/Connman
-    DEFINES += USE_MODULE_PREFIX
-}
-
+MODULENAME = Connman
 TARGETPATH = $$[QT_INSTALL_QML]/$$MODULENAME
 
 target.path = $$TARGETPATH
@@ -38,10 +27,6 @@ qmldir.path = $$TARGETPATH
 INSTALLS += target qmldir
 
 qmltypes.target = qmltypes
-contains(CONFIG,no-module-prefix) {
-    qmltypes.commands = qmlplugindump -nonrelocatable Connman 0.2 > $$PWD/plugins.qmltypes
-} else {
-    qmltypes.commands = qmlplugindump -nonrelocatable MeeGo.Connman 0.2 > $$PWD/plugins.qmltypes
-}
+qmltypes.commands = qmlplugindump -nonrelocatable Connman 0.2 > $$PWD/plugins.qmltypes
 
 QMAKE_EXTRA_TARGETS += qmltypes
diff --git a/plugin/plugins.qmltypes b/plugin/plugins.qmltypes
index d050750..b82d538 100644
--- a/plugin/plugins.qmltypes
+++ b/plugin/plugins.qmltypes
@@ -4,14 +4,14 @@ import QtQuick.tooling 1.2
 // It is used for QML tooling purposes only.
 //
 // This file was auto-generated by:
-// 'qmlplugindump -nonrelocatable @@ModulePrefix@@Connman 0.2'
+// 'qmlplugindump -nonrelocatable Connman 0.2'
 
 Module {
     dependencies: ["QtQuick 2.0"]
     Component {
         name: "ClockModel"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/ClockModel 0.2"]
+        exports: ["Connman/ClockModel 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "timezone"; type: "string" }
         Property { name: "timezoneUpdates"; type: "string" }
@@ -57,7 +57,7 @@ Module {
     Component {
         name: "Counter"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/NetworkCounter 0.2"]
+        exports: ["Connman/NetworkCounter 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "bytesReceived"; type: "qulonglong"; isReadonly: true }
         Property { name: "bytesTransmitted"; type: "qulonglong"; isReadonly: true }
@@ -104,7 +104,7 @@ Module {
     Component {
         name: "NetworkManager"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/NetworkManager 0.2"]
+        exports: ["Connman/NetworkManager 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "available"; type: "bool"; isReadonly: true }
         Property { name: "state"; type: "string"; isReadonly: true }
@@ -307,14 +307,14 @@ Module {
     Component {
         name: "NetworkManagerFactory"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/NetworkManagerFactory 0.2"]
+        exports: ["Connman/NetworkManagerFactory 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "instance"; type: "NetworkManager"; isReadonly: true; isPointer: true }
     }
     Component {
         name: "NetworkService"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/NetworkService 0.2"]
+        exports: ["Connman/NetworkService 0.2"]
         exportMetaObjectRevisions: [0]
         Enum {
             name: "SecurityType"
@@ -643,7 +643,7 @@ Module {
     Component {
         name: "NetworkSession"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/NetworkSession 0.2"]
+        exports: ["Connman/NetworkSession 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "state"; type: "string"; isReadonly: true }
         Property { name: "name"; type: "string"; isReadonly: true }
@@ -705,7 +705,7 @@ Module {
     Component {
         name: "NetworkTechnology"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/NetworkTechnology 0.2"]
+        exports: ["Connman/NetworkTechnology 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "name"; type: "string"; isReadonly: true }
         Property { name: "type"; type: "string"; isReadonly: true }
@@ -767,7 +767,7 @@ Module {
     Component {
         name: "SavedServiceModel"
         prototype: "QAbstractListModel"
-        exports: ["@@ModulePrefix@@Connman/SavedServiceModel 0.2"]
+        exports: ["Connman/SavedServiceModel 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "name"; type: "string" }
         Property { name: "sort"; type: "bool" }
@@ -790,7 +790,7 @@ Module {
     Component {
         name: "TechnologyModel"
         prototype: "QAbstractListModel"
-        exports: ["@@ModulePrefix@@Connman/TechnologyModel 0.2"]
+        exports: ["Connman/TechnologyModel 0.2"]
         exportMetaObjectRevisions: [0]
         Enum {
             name: "ServiceFilter"
@@ -853,7 +853,7 @@ Module {
     Component {
         name: "UserAgent"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/UserAgent 0.2"]
+        exports: ["Connman/UserAgent 0.2"]
         exportMetaObjectRevisions: [0]
         Property { name: "connectionRequestType"; type: "string" }
         Property { name: "path"; type: "string" }
@@ -905,7 +905,7 @@ Module {
     Component {
         name: "VpnConnection"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/VpnConnection 0.2"]
+        exports: ["Connman/VpnConnection 0.2"]
         exportMetaObjectRevisions: [0]
         Enum {
             name: "ConnectionState"
@@ -941,7 +941,7 @@ Module {
     Component {
         name: "VpnManager"
         prototype: "QObject"
-        exports: ["@@ModulePrefix@@Connman/VpnManager 0.2"]
+        exports: ["Connman/VpnManager 0.2"]
         isCreatable: false
         isSingleton: true
         exportMetaObjectRevisions: [0]
@@ -997,7 +997,7 @@ Module {
     Component {
         name: "VpnModel"
         prototype: "QAbstractListModel"
-        exports: ["@@ModulePrefix@@Connman/VpnModel 0.2"]
+        exports: ["Connman/VpnModel 0.2"]
         isCreatable: false
         isSingleton: true
         exportMetaObjectRevisions: [0]
diff --git a/plugin/qmldir b/plugin/qmldir
index b147cc5..8ac0359 100644
--- a/plugin/qmldir
+++ b/plugin/qmldir
@@ -1,3 +1,3 @@
-module @@ModulePrefix@@Connman
+module Connman
 plugin ConnmanQtDeclarative
 typeinfo plugins.qmltypes
diff --git a/rpm/connman-qt5.spec b/rpm/connman-qt5.spec
index e76f872..0a986fc 100644
--- a/rpm/connman-qt5.spec
+++ b/rpm/connman-qt5.spec
@@ -3,7 +3,7 @@ Summary:    Qt bindings for connman
 Version:    1.2.48
 Release:    1
 License:    ASL 2.0
-URL:        https://git.sailfishos.org/mer-core/libconnman-qt
+URL:        https://github.com/sailfishos/libconnman-qt/
 Source0:    %{name}-%{version}.tar.bz2
 Requires:   connman >= 1.32+git191
 Requires:   libdbusaccess >= 1.0.4
@@ -26,7 +26,6 @@ This is a library for working with connman using Qt
 
 %package declarative
 Summary:    Declarative plugin for Qt Quick for connman-qt
-Group:      Development/Libraries
 Requires:   %{name} = %{version}-%{release}
 Requires:   connman-qt5
 
@@ -37,7 +36,6 @@ applications using libconnman-qt
 
 %package devel
 Summary:    Development files for connman-qt
-Group:      Development/Libraries
 Requires:   %{name} = %{version}-%{release}
 
 %description devel
@@ -53,8 +51,11 @@ applications using libconnman-qt
 %qtc_make %{?_smp_mflags}
 
 %install
-rm -rf %{buildroot}
 %qmake5_install
+# MeeGo.Connman legacy import
+mkdir -p %{buildroot}%{_libdir}/qt5/qml/MeeGo/Connman
+ln -sf ../../Connman/libConnmanQtDeclarative.so %{buildroot}%{_libdir}/qt5/qml/MeeGo/Connman/
+sed 's/module Connman/module MeeGo.Connman/' < plugin/qmldir > %{buildroot}%{_libdir}/qt5/qml/MeeGo/Connman/qmldir
 
 %post -p /sbin/ldconfig
 
@@ -66,6 +67,7 @@ rm -rf %{buildroot}
 
 %files declarative
 %defattr(-,root,root,-)
+%{_libdir}/qt5/qml/Connman
 %{_libdir}/qt5/qml/MeeGo/Connman
 
 %files devel
