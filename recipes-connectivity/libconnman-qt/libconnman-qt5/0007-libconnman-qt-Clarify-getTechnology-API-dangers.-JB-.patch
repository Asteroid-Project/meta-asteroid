From 6deb9bddc7105f791ac001b024d7de1902a50e01 Mon Sep 17 00:00:00 2001
From: Pekka Vuorela <pekka.vuorela@jolla.com>
Date: Tue, 31 Jan 2023 16:01:36 +0200
Subject: [PATCH] [libconnman-qt] Clarify getTechnology() API dangers. JB#59734

---
 libconnman-qt/networkmanager.h      | 4 ++++
 libconnman-qt/networktechnology.cpp | 1 -
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/libconnman-qt/networkmanager.h b/libconnman-qt/networkmanager.h
index a37dadb..62672ce 100644
--- a/libconnman-qt/networkmanager.h
+++ b/libconnman-qt/networkmanager.h
@@ -72,6 +72,10 @@ public:
 
     bool isAvailable() const;
 
+    // Note: the resulting pointer on getTechnology() and getTechnologies() can get invalid after the next
+    // technologiesUpdated signal, so need to be sure to fetch values again and stop using pointers that
+    // are no longer available.
+    // Note: using getTechnology() from QML is discouraged and the Q_INVOKABLE might get removed
     Q_INVOKABLE NetworkTechnology* getTechnology(const QString &type) const;
     QVector<NetworkTechnology *> getTechnologies() const;
     QVector<NetworkService*> getServices(const QString &tech = QString()) const;
diff --git a/libconnman-qt/networktechnology.cpp b/libconnman-qt/networktechnology.cpp
index fc8400b..48ed8b3 100644
--- a/libconnman-qt/networktechnology.cpp
+++ b/libconnman-qt/networktechnology.cpp
@@ -102,7 +102,6 @@ void NetworkTechnology::initialize()
             QDBusPendingReply<ConnmanObjectList> reply = *watcher;
             watcher->deleteLater();
 
-
             if (reply.isError()) {
                 DBG_("Failed to connman techonologies:" << reply.isError() << reply.error().type());
             } else {
