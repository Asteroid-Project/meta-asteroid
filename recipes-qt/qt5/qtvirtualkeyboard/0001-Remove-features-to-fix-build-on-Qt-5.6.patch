From 614cb4c5e77e97b1339ad77b3402f7a6e4d15e87 Mon Sep 17 00:00:00 2001
From: Florent Revest <revestflo@gmail.com>
Date: Mon, 31 Oct 2016 17:11:34 +0100
Subject: [PATCH] Remove features to fix build on Qt 5.6

---
 src/virtualkeyboard/inputcontext.cpp            | 58 +------------------------
 src/virtualkeyboard/inputcontext.h              | 12 -----
 src/virtualkeyboard/inputengine.cpp             |  6 +--
 src/virtualkeyboard/lipiinputmethod.cpp         |  6 +--
 src/virtualkeyboard/t9writeinputmethod.cpp      |  2 +-
 src/virtualkeyboard/virtualkeyboardsettings.cpp |  2 +-
 6 files changed, 10 insertions(+), 76 deletions(-)

diff --git a/src/virtualkeyboard/inputcontext.cpp b/src/virtualkeyboard/inputcontext.cpp
index 070e290..147319c 100644
--- a/src/virtualkeyboard/inputcontext.cpp
+++ b/src/virtualkeyboard/inputcontext.cpp
@@ -106,10 +106,7 @@ public:
         preeditTextAttributes(),
         surroundingText(),
         selectedText(),
-        cursorRectangle(),
-        selectionControlVisible(false),
-        anchorRectIntersectsClipRect(false),
-        cursorRectIntersectsClipRect(false)
+        cursorRectangle()
 #ifdef QT_VIRTUALKEYBOARD_ARROW_KEY_NAVIGATION
         , activeNavigationKeys()
 #endif
@@ -135,9 +132,6 @@ public:
     QString surroundingText;
     QString selectedText;
     QRectF cursorRectangle;
-    bool selectionControlVisible;
-    bool anchorRectIntersectsClipRect;
-    bool cursorRectIntersectsClipRect;
 #ifdef QT_VIRTUALKEYBOARD_ARROW_KEY_NAVIGATION
     QSet<int> activeNavigationKeys;
 #endif
@@ -561,29 +555,6 @@ bool InputContext::hasEnterKeyAction(QObject *item) const
     return item != 0 && qmlAttachedPropertiesObject<EnterKeyAction>(item, false);
 }
 
-void InputContext::setSelectionOnFocusObject(const QPointF &anchorPos, const QPointF &cursorPos)
-{
-    QPlatformInputContext::setSelectionOnFocusObject(anchorPos, cursorPos);
-}
-
-bool InputContext::anchorRectIntersectsClipRect() const
-{
-    Q_D(const InputContext);
-    return d->anchorRectIntersectsClipRect;
-}
-
-bool InputContext::cursorRectIntersectsClipRect() const
-{
-    Q_D(const InputContext);
-    return d->cursorRectIntersectsClipRect;
-}
-
-bool InputContext::selectionControlVisible() const
-{
-    Q_D(const InputContext);
-    return d->selectionControlVisible;
-}
-
 void InputContext::onInputItemChanged()
 {
     Q_D(InputContext);
@@ -651,8 +622,7 @@ void InputContext::update(Qt::InputMethodQueries queries)
 
     // fetch
     Qt::InputMethodHints inputMethodHints = Qt::InputMethodHints(d->inputContext->inputMethodQuery(Qt::ImHints).toInt());
-    const int cursorPosition = d->inputContext->inputMethodQuery(Qt::ImCursorPosition).toInt();
-    const int anchorPosition = d->inputContext->inputMethodQuery(Qt::ImAnchorPosition).toInt();
+    int cursorPosition = d->inputContext->inputMethodQuery(Qt::ImCursorPosition).toInt();
     QRectF cursorRectangle = qApp->inputMethod()->cursorRectangle();
     QString surroundingText = d->inputContext->inputMethodQuery(Qt::ImSurroundingText).toString();
     QString selectedText = d->inputContext->inputMethodQuery(Qt::ImCurrentSelection).toString();
@@ -663,18 +633,6 @@ void InputContext::update(Qt::InputMethodQueries queries)
     bool newSelectedText = selectedText != d->selectedText;
     bool newCursorPosition = cursorPosition != d->cursorPosition;
     bool newCursorRectangle = cursorRectangle != d->cursorRectangle;
-    bool selectionControlVisible = d->inputContext->isInputPanelVisible() && (cursorPosition != anchorPosition);
-    bool newSelectionControlVisible = selectionControlVisible != d->selectionControlVisible;
-
-    QRectF inputItemClipRect = d->inputContext->inputMethodQuery(Qt::ImInputItemClipRectangle).toRectF();
-    QRectF anchorRect = d->inputContext->inputMethodQuery(Qt::ImAnchorRectangle).toRectF();
-    QRectF cursorRect = d->inputContext->inputMethodQuery(Qt::ImCursorRectangle).toRectF();
-
-    bool anchorRectIntersectsClipRect = inputItemClipRect.intersects(anchorRect);
-    bool newAnchorRectIntersectsClipRect = anchorRectIntersectsClipRect != d->anchorRectIntersectsClipRect;
-
-    bool cursorRectIntersectsClipRect = inputItemClipRect.intersects(cursorRect);
-    bool newCursorRectIntersectsClipRect = cursorRectIntersectsClipRect != d->cursorRectIntersectsClipRect;
 
     // update
     d->inputMethodHints = inputMethodHints;
@@ -682,9 +640,6 @@ void InputContext::update(Qt::InputMethodQueries queries)
     d->selectedText = selectedText;
     d->cursorPosition = cursorPosition;
     d->cursorRectangle = cursorRectangle;
-    d->selectionControlVisible = selectionControlVisible;
-    d->anchorRectIntersectsClipRect = anchorRectIntersectsClipRect;
-    d->cursorRectIntersectsClipRect = cursorRectIntersectsClipRect;
 
     // update input engine
     if ((newSurroundingText || newCursorPosition) &&
@@ -711,15 +666,6 @@ void InputContext::update(Qt::InputMethodQueries queries)
     if (newCursorRectangle) {
         emit cursorRectangleChanged();
     }
-    if (newSelectionControlVisible) {
-        emit selectionControlVisibleChanged();
-    }
-    if (newAnchorRectIntersectsClipRect) {
-        emit anchorRectIntersectsClipRectChanged();
-    }
-    if (newCursorRectIntersectsClipRect) {
-        emit cursorRectIntersectsClipRectChanged();
-    }
 
     // word reselection
     if (newInputMethodHints || newSurroundingText || newSelectedText)
diff --git a/src/virtualkeyboard/inputcontext.h b/src/virtualkeyboard/inputcontext.h
index fa7e07c..d1220b2 100644
--- a/src/virtualkeyboard/inputcontext.h
+++ b/src/virtualkeyboard/inputcontext.h
@@ -65,9 +65,6 @@ class InputContext : public QObject
     Q_PROPERTY(QObject *inputItem READ inputItem NOTIFY inputItemChanged)
     Q_PROPERTY(QtVirtualKeyboard::ShiftHandler *shiftHandler READ shiftHandler CONSTANT)
     Q_PROPERTY(QtVirtualKeyboard::InputEngine *inputEngine READ inputEngine CONSTANT)
-    Q_PROPERTY(bool selectionControlVisible READ selectionControlVisible NOTIFY selectionControlVisibleChanged)
-    Q_PROPERTY(bool anchorRectIntersectsClipRect READ anchorRectIntersectsClipRect NOTIFY anchorRectIntersectsClipRectChanged)
-    Q_PROPERTY(bool cursorRectIntersectsClipRect READ cursorRectIntersectsClipRect NOTIFY cursorRectIntersectsClipRectChanged)
 
 public:
     explicit InputContext(PlatformInputContext *parent = 0);
@@ -99,9 +96,6 @@ public:
     QObject *inputItem() const;
     ShiftHandler *shiftHandler() const;
     InputEngine *inputEngine() const;
-    bool selectionControlVisible() const;
-    bool anchorRectIntersectsClipRect() const;
-    bool cursorRectIntersectsClipRect() const;
 
     Q_INVOKABLE void hideInputPanel();
     Q_INVOKABLE void sendKeyClick(int key, const QString &text, int modifiers = 0);
@@ -113,9 +107,6 @@ public:
     Q_INVOKABLE bool fileExists(const QUrl &fileUrl);
     Q_INVOKABLE bool hasEnterKeyAction(QObject *item) const;
 
-    // For selection handles
-    Q_INVOKABLE void setSelectionOnFocusObject(const QPointF &anchorPos, const QPointF &cursorPos);
-
 signals:
     void focusChanged();
     void focusEditorChanged();
@@ -133,11 +124,8 @@ signals:
     void animatingChanged();
     void localeChanged();
     void inputItemChanged();
-    void selectionControlVisibleChanged();
     void navigationKeyPressed(int key, bool isAutoRepeat);
     void navigationKeyReleased(int key, bool isAutoRepeat);
-    void anchorRectIntersectsClipRectChanged();
-    void cursorRectIntersectsClipRectChanged();
 
 private slots:
     void onInputItemChanged();
diff --git a/src/virtualkeyboard/inputengine.cpp b/src/virtualkeyboard/inputengine.cpp
index 9b6b3a5..9f7086e 100644
--- a/src/virtualkeyboard/inputengine.cpp
+++ b/src/virtualkeyboard/inputengine.cpp
@@ -390,7 +390,7 @@ void InputEngine::setInputMethod(AbstractInputMethod *inputMethod)
             }
 
             // Deallocate inactive selection lists
-            for (const SelectionListModel::Type &selectionListType : qAsConst(inactiveSelectionLists)) {
+            for (const SelectionListModel::Type &selectionListType : inactiveSelectionLists) {
                 const auto it = d->selectionListModels.constFind(selectionListType);
                 if (it != d->selectionListModels.cend()) {
                     it.value()->setDataSource(0, selectionListType);
@@ -421,7 +421,7 @@ QList<int> InputEngine::inputModes() const
         return resultList;
     }
     resultList.reserve(inputModeList.size());
-    for (const InputMode &inputMode : qAsConst(inputModeList))
+    for (const InputMode &inputMode : inputModeList)
         resultList.append(inputMode);
     return resultList;
 }
@@ -479,7 +479,7 @@ QList<int> InputEngine::patternRecognitionModes() const
     if (patterRecognitionModeList.isEmpty())
         return resultList;
     resultList.reserve(patterRecognitionModeList.size());
-    for (const PatternRecognitionMode &patternRecognitionMode : qAsConst(patterRecognitionModeList))
+    for (const PatternRecognitionMode &patternRecognitionMode : patterRecognitionModeList)
         resultList.append(patternRecognitionMode);
     return resultList;
 }
diff --git a/src/virtualkeyboard/lipiinputmethod.cpp b/src/virtualkeyboard/lipiinputmethod.cpp
index 30ee9ed..f5e5c1e 100644
--- a/src/virtualkeyboard/lipiinputmethod.cpp
+++ b/src/virtualkeyboard/lipiinputmethod.cpp
@@ -189,7 +189,7 @@ public:
     int countActiveTraces() const
     {
         int count = 0;
-        for (Trace *trace : qAsConst(traceList)) {
+        for (Trace *trace : traceList) {
             if (!trace->isFinal())
                 count++;
         }
@@ -382,7 +382,7 @@ public:
                             bool matchesToExisting = true;
                             const qreal minimumSwipeLength = (swipeLength * (100.0 - MAXIMUM_WIDTH_VARIANCE) / 100.0);
                             const qreal maximumSwipeLength = (swipeLength * (100.0 + MAXIMUM_WIDTH_VARIANCE) / 100.0);
-                            for (const QVector2D &otherSwipeVector : qAsConst(swipeVectors)) {
+                            for (const QVector2D &otherSwipeVector : swipeVectors) {
                                 const qreal otherSwipeLength = otherSwipeVector.length();
                                 const qreal theta = qAcos(QVector2D::dotProduct(swipeVector, otherSwipeVector) / (swipeLength * otherSwipeLength));
 
@@ -582,7 +582,7 @@ public:
         recordedData.append(QStringLiteral(".POINTS_PER_SECOND %1").arg(deviceInfo->getSamplingRate()));
 
         qlonglong t0 = 0;
-        for (const Trace *trace : qAsConst(traceList)) {
+        for (const Trace *trace : traceList) {
             const QVariantList &points = trace->points();
             const bool hasTime = trace->channels().contains("t");
             const QVariantList timeData = hasTime ? trace->channelData("t") : QVariantList();
diff --git a/src/virtualkeyboard/t9writeinputmethod.cpp b/src/virtualkeyboard/t9writeinputmethod.cpp
index 71a166b..a582ec8 100644
--- a/src/virtualkeyboard/t9writeinputmethod.cpp
+++ b/src/virtualkeyboard/t9writeinputmethod.cpp
@@ -653,7 +653,7 @@ public:
     int countActiveTraces() const
     {
         int count = 0;
-        for (Trace *trace : qAsConst(traceList)) {
+        for (Trace *trace : traceList) {
             if (!trace->isFinal())
                 count++;
         }
diff --git a/src/virtualkeyboard/virtualkeyboardsettings.cpp b/src/virtualkeyboard/virtualkeyboardsettings.cpp
index 1bc8758..1a0e412 100644
--- a/src/virtualkeyboard/virtualkeyboardsettings.cpp
+++ b/src/virtualkeyboard/virtualkeyboardsettings.cpp
@@ -77,7 +77,7 @@ public:
             }
         }
 
-        for (const QString &styleImportPath : qAsConst(styleImportPathList)) {
+        for (const QString &styleImportPath : styleImportPathList) {
             QString filePath = buildStyleFilePath(styleImportPath, name);
             bool pathExist = false;
 #ifdef COMPILING_QML
-- 
2.10.1

